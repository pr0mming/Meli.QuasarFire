// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/topsecret": {
            "post": {
                "description": "get the location and the decoded message using the right POST data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meli.QuasarFire"
                ],
                "summary": "get the location and the decoded message",
                "parameters": [
                    {
                        "description": "Satellites JSON",
                        "name": "satellites",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aggregate.TopSecretRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aggregate.TopSecretResponse"
                        }
                    }
                }
            }
        },
        "/topsecret_split": {
            "get": {
                "description": "get the location and the decoded message using the right POST data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meli.QuasarFire"
                ],
                "summary": "get the location and the decoded message",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aggregate.TopSecretResponse"
                        }
                    }
                }
            }
        },
        "/topsecret_split/{fs_name}/{ss_name}/{ts_name}": {
            "post": {
                "description": "get the location and the decoded message using the right POST data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Meli.QuasarFire"
                ],
                "summary": "get the location and the decoded message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "First Satellite name",
                        "name": "fs_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Seconds Satellite name",
                        "name": "ss_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Third Satellite name",
                        "name": "ts_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Satellites JSON",
                        "name": "satellites",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/aggregate.TopSecretSplitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/aggregate.TopSecretSplitRequest"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "aggregate.TopSecretCoordsResponse": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "number"
                },
                "y": {
                    "type": "number"
                }
            }
        },
        "aggregate.TopSecretRequest": {
            "type": "object",
            "properties": {
                "satellites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aggregate.TopSecretSatelliteRequest"
                    }
                }
            }
        },
        "aggregate.TopSecretResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/definitions/aggregate.TopSecretCoordsResponse"
                }
            }
        },
        "aggregate.TopSecretSatelliteRequest": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "aggregate.TopSecretSplitRequest": {
            "type": "object",
            "properties": {
                "satellites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aggregate.TopSecretSplitSatelliteRequest"
                    }
                }
            }
        },
        "aggregate.TopSecretSplitSatelliteRequest": {
            "type": "object",
            "properties": {
                "distance": {
                    "type": "number"
                },
                "message": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
